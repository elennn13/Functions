// Template.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <iostream>

void say_hi() {  //функции не комментируются
	std::cout << "Привет, мир!\n";
	//return;Останавливает функцию
	std::cout << "Всем пока!\n";
}


//Параметры функции () - это переменные, существующие 
//строго внутри функции и принимающие в себя значения,
//передаваемые в функцию в момент ее вызова.	
// Функции могут работать с внешними данными


// Аргументы функции - это значения, передаваемые в 
// функцию в момент ее вызова и копируемые в параметры
//функции




void mult_x2(int num) {
std::cout << num * 2 << std::endl;
}


	int sum(int a, int b) {
		int result = a + b;
		return a + b; // return result
	}


	void print_arr(int arr[], const int length) {
		for (int i = 0; i < length; i++)
			std::cout << arr[i] << ' ';
		std::cout << std::endl;

}

	void mult_x5(int num) {
		num *= 5;

	}


	void mult_arr_x5(int arr[]) {
		arr[1] *= 5;
		
	}



	void positive_indexes(int arr[], const int length) {
		for (int i = 0; i < length; i++)//перебор массива
			if (arr[i] > 0)// сравнение самого элемента
				std::cout << i << ' ';
		std::cout << std::endl;
	}


 
	unsigned long long factorial(int num) {
		if (num < 0)//проверка если число отрицательное			
			return 0;

		unsigned long long result = 1;//факториал считается с 1
		for (int i = 2; i <= num; i++)// 1*2*..до самого числа
			result *= i;
		return result;
	}




int main()
{
	setlocale(LC_ALL,"ru");
	int n, m;
	/*Функции не возвращающие значения (Процедуры)
	say_hi();
	say_hi();

	std::cout << "Введите число -> ";
	std::cin >> n;
	mult_x2(n);
	mult_x2(10);
	*/
	//Функции возвращающие значения истинные
	
	std::cout << "введите два числа -> ";
	std::cin >> n >> m;
	std::cout << n << " + " << m << " = " << sum(n, m) << std::endl;

	//Функции принимающие массив
	
	const int size = 5;
	int arr[size]{ 7, 15, 42, 105, -77 };

	std::cout << "Массив:\n";
	print_arr(arr, size);//вывести массив который называетсяarrмассив


	//параметры и аргументы функции
	
	n = 10;
	mult_x5(n);
	std::cout << n << std::endl; // 10

	int myarr[3]{ 15,25,35 };
	mult_x5(myarr[1]);
	std::cout << myarr[1] << std::endl;//25

	mult_arr_x5(myarr);
	std::cout << myarr[1] << std::endl;//125


	//Задача 1.Индексы положительных элементов массива
	// написать функцию к.я принимает массив и его длину, 
	// после чего выводит все индексы (не возвращает VOID) положительных элементов
	
	
	std::cout << "Задача 1.\nМассив:\n";
	const int size1 = 5;
	int arr1[size1]{ 0,77,-5,-100,42 };
	print_arr(arr1, size1);//выводит массив

	std::cout << "Индексы положительных элементов:\n";
	positive_indexes(arr1, size1);//выводит положительные элементы массива

	


	//Задача 2.ФАКТОРИАЛ
	// функция которая принимает число, после чего возвращает его 
	// факториал(произведение всех чисел от 1 до самого числа).

	std::cout << "Задача 2.\n Введите число -> ";
	std::cin >> n;
	std::cout << n << " ! = " << factorial(n) << std::endl;




	
	return 0;

}

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
